//import 'dart:io';

//import 'dart:io';

import 'package:audioplayers/audioplayers.dart';
import 'package:flutter/material.dart';
import 'package:file_picker/file_picker.dart';

class Pickfile {
  static Future<FilePickerResult?> pickFile() async {
    return await FilePicker.platform.pickFiles(
      type: FileType.audio,
    );
  }
}

class AudioPlayerPage extends StatefulWidget {
  @override
  _AudioPlayerPageState createState() => _AudioPlayerPageState();
}

class _AudioPlayerPageState extends State<AudioPlayerPage> {
  late AudioPlayer audioPlayer;
  late String filePath;
  bool isPlaying = false;
  double sliderValue = 0.0;
  Duration duration = Duration();
  Duration position = Duration();



  @override
  void initState() {
    super.initState();
    audioPlayer = AudioPlayer();
    audioPlayer.onAudioPositionChanged.listen((Duration p) {
      setState(() {
        position = p;
      });
    });
    audioPlayer.onDurationChanged.listen((Duration d) {
      setState(() {
        duration = d;
      });
    });
  }

  //   if (result != null) {
  //     File file = File(result.files.single.path!);
  //     setState(() {
  //       filePath = file.path;
  //     });
  //     playAudio();
  //   }

  void playAudio() {
    audioPlayer.stop();
    audioPlayer.play(filePath, isLocal: true);
    setState(() {
      isPlaying = true;
    });
  }

  void pauseAudio() {
    audioPlayer.pause();
    setState(() {
      isPlaying = false;
    });
  }

  void stopAudio() {
    audioPlayer.stop();
    setState(() {
      isPlaying = false;
    });
  }

  String formatDuration(Duration d) {
    String minutes = (d.inMinutes % 60).toString().padLeft(2, '0');
    String seconds = (d.inSeconds % 60).toString().padLeft(2, '0');
    return "$minutes:$seconds";
  }

  @override
  void dispose() {
    audioPlayer.release();
    audioPlayer.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Center(
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: <Widget>[
          IconButton(
            icon: isPlaying ? Icon(Icons.pause) : Icon(Icons.play_arrow),
            iconSize: 48.0,
            onPressed: () {
              if (isPlaying) {
                pauseAudio();
              } else {
                playAudio();
              }
            },
          ),
          SizedBox(height: 16.0),
          Slider(
            value: position.inSeconds.toDouble(),
            min: 0.0,
            max: duration.inSeconds.toDouble(),
            onChanged: (double value) {
              setState(() {
                audioPlayer.seek(Duration(seconds: value.toInt()));
              });
            },
          ),
          Padding(
            padding: EdgeInsets.symmetric(horizontal: 16.0),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: <Widget>[
                Text(formatDuration(position)),
                Text(formatDuration(duration)),
              ],
            ),
          ),
        ],
      ),
    );
  }
}
